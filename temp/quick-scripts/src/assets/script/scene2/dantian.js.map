{"version":3,"sources":["assets\\script\\scene2\\dantian.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class dantian extends cc.Component {\r\n\r\n    @property\r\n    private dantian_now:number = 0;\r\n\r\n    @property\r\n    private explosion:number = 0;\r\n\r\n    @property(cc.Prefab)\r\n    yichu:cc.Prefab = null;\r\n\r\n    tupo_num:number = 0 //突破的筋脉数量,突破筋脉时增加\r\n\r\n    dantian_label:cc.Node = new cc.Node();  //这里等于null会报错\r\n    yichu_label:cc.Node = new cc.Node();\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n \r\n    get_dantian(){ //获取当前丹田值\r\n        return this.dantian_now;\r\n    }\r\n    \r\n\r\n    //丹田满时的数值\r\n    dantian_max(){\r\n        return 210;\r\n \r\n    }\r\n\r\n    dantian_ui(){  //显示当前的丹田值\r\n\r\n        var dantian_num = this.dantian_label.addComponent(cc.Label); //增加label组件并赋给丹药数量\r\n        this.dantian_label.color = cc.color(255,255,255); //将字体改为白色\r\n        //设置文本大小\r\n        dantian_num.fontSize = 50;\r\n        dantian_num.lineHeight = 50;\r\n \r\n        this.dantian_label.setParent(this.node);  //父节点是this.node才能出来\r\n        this.dantian_label.x = 0; //相对于父节点的横坐标位置不变\r\n        this.dantian_label.y = 0;//相对于父节点的纵坐标在下面一点的位置\r\n        dantian_num.string = '丹田值: '+String(this.get_dantian())+'/'+String(this.dantian_max());  \r\n    }\r\n\r\n    yichu_ui(){  //显示当前溢出的丹田值\r\n\r\n\r\n        var yichu_num = this.yichu_label.addComponent(cc.Label); //增加label组件并赋给丹药数量\r\n        this.yichu_label.color = cc.color(200,0,0); //将字体改为白色\r\n        //设置文本大小\r\n        yichu_num.fontSize = 50;\r\n        yichu_num.lineHeight = 50;\r\n \r\n        this.yichu_label.setParent(this.node);  //父节点是this.node才能出来\r\n        this.yichu_label.x = 0; //相对于父节点的横坐标位置不变\r\n        this.yichu_label.y = 100;//相对于父节点的纵坐标在下面一点的位置\r\n        yichu_num.string = '丹田溢出值: '+String(this.explosion);  \r\n    }\r\n\r\n\r\n    dantian_gain(dantian_add:number){// 此方法只在突破场景使用\r\n        //延时函数让丹田条可以延时连续上涨\r\n\r\n        let toward = dantian_add / Math.abs(dantian_add)  //丹田增长的方向，可以是负增长\r\n        if(dantian_add == 0){  //防止toward为0/0变成无限大，会有bug\r\n            toward =0 ;\r\n        }\r\n\r\n        if(this.explosion == 0 && this.dantian_now + dantian_add > this.dantian_max()){\r\n            this.explosion = this.dantian_now + dantian_add - this.dantian_max();\r\n            \r\n        }\r\n\r\n        else if(this.explosion > 0){\r\n            \r\n            if(toward > 0){\r\n                this.explosion += dantian_add;\r\n            }\r\n            else{\r\n                if(this.explosion + dantian_add <= 0){  //如果丹田减少的比explosion当前数值更多\r\n                    dantian_add += this.explosion;\r\n                    this.explosion = 0;\r\n                }\r\n\r\n                else{                           //反之\r\n                    this.explosion += dantian_add;\r\n                    dantian_add = 0;\r\n\r\n                }\r\n            }\r\n            \r\n        }\r\n  \r\n\r\n        //丹田正常增长情况\r\n        let end = this.dantian_now + dantian_add;\r\n        if (end > this.dantian_max()) {  //如果丹田爆了\r\n            end = this.dantian_max()\r\n            \r\n        }\r\n        else if (end < 0) end = 0  //如果减少到小于0的情况\r\n        let gap = Math.abs(end - this.dantian_now)  //改变的总量\r\n        this.dantian_now = end;\r\n            \r\n        let dt = this.node.getComponent(cc.Sprite)\r\n        this.schedule(()=>{\r\n            dt.fillRange+= (1/this.dantian_max()*toward);  //经验exp.fillRange到1表示经验满，经验值增长的可视化横条，1/this.exp_required()表示每间隔一定时间增加这么多的经验条显示，实现动态增长\r\n        }, 1/this.dantian_max(), gap);\r\n\r\n\r\n        if(this.explosion > 0){  //丹田爆满后的反应\r\n            let yichu = cc.instantiate(this.yichu);\r\n            yichu.setParent(cc.director.getScene());    //这里的溢出提示体用的animation和prefab实现的，所以设置坐标不管用，都会在预制体设置好的位置产生，修改位置直接拖动assets中yichu预制体位置，并修改动画\r\n\r\n            if(this.explosion <= 255){//保证丹田爆满不反复变化\r\n                this.node.color = cc.color(255, 255-this.explosion, 255-this.explosion);\r\n            }\r\n        }\r\n\r\n        else{\r\n            this.node.color = cc.color(255, 255, 255);\r\n        }\r\n\r\n        //显示溢出值和丹田值\r\n        this.dantian_ui();  \r\n        this.yichu_ui();\r\n\r\n    \r\n    }\r\n\r\n    /*\r\n    //丹田增加\r\n    dantian_gain(dantian_add:number){// 此方法只在突破场景使用\r\n        // 即level1满值200经验，传入参数代表增加经验值\r\n        //延时函数让经验条可以延时连续上涨\r\n        //dantian.get_dantian()返回当前丹田值 ， dantian.add_dantian(number)改变当前丹田值\r\n        if(this.dantian_now) > \r\n\r\n        let toward = dantian_add / Math.abs(dantian_add)  //丹田增长的方向，可以是负增长\r\n        let end = this.dantian_now + dantian_add;\r\n        let dantian_now = this.dantian_now; //存储改变前的丹田值，用于增长\r\n\r\n        //保证丹田值不为负\r\n        this.dantian_now = end>=0?end:0;\r\n        let explosion = this.dantian_now - this.dantian_max(); //丹田超过的量\r\n        \r\n\r\n        if (end > this.dantian_max()) {  //如果丹田爆了\r\n            end = this.dantian_max()\r\n        \r\n        }\r\n        else if (end < 0) end = 0  //如果减少到小于0的情况\r\n        let gap = Math.abs(end - dantian_now)  //改变的总量\r\n        \r\n        let dt = this.node.getComponent(cc.Sprite)\r\n        this.schedule(()=>{\r\n            dt.fillRange+= (1/this.dantian_max()*toward);  //经验exp.fillRange到1表示经验满，经验值增长的可视化横条，1/this.exp_required()表示每间隔一定时间增加这么多的经验条显示，实现动态增长\r\n        }, 1/this.dantian_max(), gap);\r\n\r\n\r\n        //如果丹田爆炸了\r\n        if(explosion>0){\r\n            let yichu = cc.instantiate(this.yichu);\r\n            yichu.setParent(cc.director.getScene());    //这里的溢出提示体用的animation和prefab实现的，所以设置坐标不管用，都会在预制体设置好的位置产生，修改位置直接拖动assets中yichu预制体位置，并修改动画\r\n\r\n            let r_num = explosion>255?0:explosion; \r\n            this.node.color = cc.color(255, 255-explosion, 255-explosion);\r\n                \r\n        }\r\n        else{\r\n            this.node.color = cc.color(255, 255, 255); //如果丹田恢复正常，则恢复本来的颜色\r\n        }\r\n\r\n    \r\n    }\r\n    */\r\n\r\n\r\n    start () {\r\n        //显示溢出值和丹田值\r\n        this.dantian_ui();  \r\n        this.yichu_ui();\r\n\r\n    }\r\n\r\n    update (dt) {\r\n    \r\n    }\r\n}\r\n"]}